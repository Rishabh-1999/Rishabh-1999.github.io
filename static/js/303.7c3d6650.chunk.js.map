{"version":3,"file":"static/js/303.7c3d6650.chunk.js","mappings":"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","sources":["../node_modules/classnames/index.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/lib/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-gfm-footnote/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-gfm-strikethrough/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm-task-list-item/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/index.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n */\n\n/**\n * @typedef {Array<Node> | string} ChildrenOrValue\n *   List to use as `children` or value to use as `value`.\n *\n * @typedef {Record<string, unknown>} Props\n *   Other fields to add to the node.\n */\n\n/**\n * Build a node.\n *\n * @param type\n *   Node type.\n * @param props\n *   Fields assigned to node.\n * @param value\n *   Children of node or value of `node` (cast to string).\n * @returns\n *   Built node.\n */\nexport const u =\n  /**\n   * @type {(\n   *   (<T extends string>(type: T) => {type: T}) &\n   *   (<T extends string, P extends Props>(type: T, props: P) => {type: T} & P) &\n   *   (<T extends string>(type: T, value: string) => {type: T, value: string}) &\n   *   (<T extends string, P extends Props>(type: T, props: P, value: string) => {type: T, value: string} & P) &\n   *   (<T extends string, C extends Array<Node>>(type: T, children: C) => {type: T, children: C}) &\n   *   (<T extends string, P extends Props, C extends Array<Node>>(type: T, props: P, children: C) => {type: T, children: C} & P)\n   * )}\n   */\n  (\n    /**\n     * @param {string} type\n     * @param {Props | ChildrenOrValue | null | undefined} [props]\n     * @param {ChildrenOrValue | null | undefined} [value]\n     * @returns {Node}\n     */\n    function (type, props, value) {\n      /** @type {Node} */\n      const node = {type: String(type)}\n\n      if (\n        (value === undefined || value === null) &&\n        (typeof props === 'string' || Array.isArray(props))\n      ) {\n        value = props\n      } else {\n        Object.assign(node, props)\n      }\n\n      if (Array.isArray(value)) {\n        // @ts-expect-error: create a parent.\n        node.children = value\n      } else if (value !== undefined && value !== null) {\n        // @ts-expect-error: create a literal.\n        node.value = String(value)\n      }\n\n      return node\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} MdastNode\n * @typedef {Extract<MdastNode, import('mdast').Parent>} MdastParent\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n *\n * @param {H} h\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} node\n * @param {MdastParent | null} parent\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @template {MdastNode} Node\n * @param {H} h\n * @param {Node} node\n * @returns {Node}\n */\nfunction returnNode(h, node) {\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {H} h\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').H} H\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').H} H\n\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').H} H\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @param {H} h\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @param {H} h\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @param {H} h\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @param {H} h\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n * @typedef {import('mdast').Parent} Parent\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {List} node\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @param {H} h\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').H} H\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {ThematicBreak} [node]\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethroughs. So they sort of cancel each other out.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/c47743b/lib/unsafe.js#L11>\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","arr","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","u","b","Symbol","for","d","e","f","g","h","k","l","n","p","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","require","StyleToObject","iterator","output","hasIterator","len","_slicedToArray","arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","unsupportedIterableToArray","nonIterableRest","element","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","charCodeAt","blankLine","tokenize","effects","ok","nok","factorySpace","code","markdownLineEnding","partial","max","limit","Number","POSITIVE_INFINITY","size","markdownSpace","enter","prefix","consume","exit","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","regex","test","String","fromCharCode","splice","list","remove","items","parameters","chunkStart","from","unshift","classifyCharacter","combineExtensions","extensions","all","index","syntaxExtension","extension","hook","left","undefined","right","constructs","existing","before","add","decodeNumericCharacterReference","base","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","normalizeIdentifier","toLowerCase","toUpperCase","resolveAll","events","context","called","resolve","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","toPropertyKey","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","setPrototypeOf","_getPrototypeOf","o","getPrototypeOf","bind","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","_construct","Parent","args","Class","Function","_wrapNativeSuper","_cache","Map","fn","indexOf","has","get","set","Wrapper","stringifyPosition","point","VFileMessage","place","origin","parts","message","stack","fatal","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","assertNonEmpty","assertPart","stem","encoding","part","bail","toStringTag","wrap","middleware","callback","fnExpectsCallback","exception","Promise","then","unified","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","settings","addPlugin","addList","addPreset","assign","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","looksLikeAVFile","includeImageAlt","one","alt","children","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","disable","null","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","createResolver","string","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","visit","visitor","reverse","visitParents","parents","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","trimLines","toml","ignore","yaml","footnoteDefinition","factory","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","cache","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","checks","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","thing","valid","dash","cap","kebab","camelcase","hastToReact","protocols","uriTransformer","uri","first","colon","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","PropTypes","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","s","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","replacement","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","gfm","ccount","character","findAndReplace","RegExp","ignored","convert","pairs","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","escape","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","split","isCorrectDomain","closingParenIndex","openingParens","closingParens","trail","trailExec","splitUrl","email","association","containerFlow","indexStack","tracker","createTracker","move","handle","bulletLastUsed","repeat","eol","indentLines","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","encode","whole","track","lineShift","shift","gfmFootnoteToMarkdown","peek","safeOptions","subexit","blank","containerPhrasing","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","handleDelete","serialize","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","tableRow","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","siblings","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","remarkGfm","castFactory","typeFactory","anyFactory","propsFactory","tests","subresult","grandparents","toResult"],"sourceRoot":""}