{"version":3,"file":"static/js/298.6dbd9e40.chunk.js","mappings":"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","sources":["components/Heading/index.tsx","data/certificates.ts","pages/CertificatesPage/index.tsx","../node_modules/classnames/index.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js"],"sourcesContent":["import React from \"react\";\n\n/* Type */\nimport { HeadingType } from \"./index.type\";\n\nfunction Heading({ subtitle, title }: HeadingType) {\n    return (\n        <div className=\"text-center\">\n            <h4\n                data-testid=\"subtitle\"\n                className=\"text-xl font-bold  leading-10 text-orange-anzac\"\n            >\n                {subtitle}\n            </h4>\n            <h1\n                data-testid=\"title\"\n                className=\"text-5xl leading-10 font-bold underline\"\n            >\n                {title}\n            </h1>\n        </div>\n    );\n}\n\nexport default React.memo(Heading);\n","export interface CertificateType {\n    name: string;\n    url: string;\n    stack: string[];\n}\n\nconst CertificatesArray: CertificateType[] = [\n    {\n        name: \"Server-side Development with NodeJS, Express and MongoDB (Coursera)\",\n        url: \"https://drive.google.com/file/d/1D27cmO6xEfFD7pLFpSm9g2tDLMD7AUz9/preview\",\n        stack: [\"Frontend\", \"Backend\", \"Database\"],\n    },\n    {\n        name: \"Understanding TypeScript - 2022 Edition (Udemy)\",\n        url: \"https://drive.google.com/file/d/1BQNZ1wqpFywQyFfBTX8SfBhBR1DrKSCW/preview\",\n        stack: [\"Frontend\", \"Backend\", \"Programming Language\"],\n    },\n    {\n        name: \"Docker & Kubernetes: The Practical Guide (Udemy)\",\n        url: \"https://drive.google.com/file/d/1GRGOltaJmhPui6-22bshLNUmDn1R-uWw/preview\",\n        stack: [\"Dev-Ops\"],\n    },\n    {\n        name: \"AWS Fundamentals Going Cloud-Native (Coursera)\",\n        url: \"https://drive.google.com/file/d/1CjH7XpWU4E5IiS2HBURIAIwLe3MwO3X8/preview\",\n        stack: [\"Cloud\", \"Dev-Ops\"],\n    },\n    {\n        name: \"Programming for Everybody (Getting Started with Python) (Coursera)\",\n        url: \"https://drive.google.com/file/d/1rS34utrZ1-LXFEeL9soq6urLqM_pg3R5/preview\",\n        stack: [\"Programming Language\", \"Python\", \"Others\"],\n    },\n    {\n        name: \"Getting Started with Data Analytics on AWS (Coursera)\",\n        url: \"https://drive.google.com/file/d/1z9IiytFDkr1lCNdVe1_Dm9Eu21GUVqxv/preview\",\n        stack: [\"Data Analytics\"],\n    },\n    {\n        name: \"Introduction to Git and GitHub (Coursera)\",\n        url: \"https://drive.google.com/file/d/1nbN0QKmEkp0-ajR7HrnuNK5jfJS_MfCR/preview\",\n        stack: [\"Others\"],\n    },\n    {\n        name: \"Python Data Structures (Coursera)\",\n        url: \"https://drive.google.com/file/d/1HPZ42EIU1vmvwgl45i6Jc_edBabXd1-g/preview\",\n        stack: [\"Python\", \"Data Structures\", \"Others\"],\n    },\n    {\n        name: \"Using Python to Access Web Data (Coursera)\",\n        url: \"https://drive.google.com/file/d/1gbKJRefg1mEe3cB4bqBPb0jdlaeWSW1-/preview\",\n        stack: [\"Python\"],\n    },\n    {\n        name: \"Using Databases with Python (Coursera)\",\n        url: \"https://drive.google.com/file/d/1M5Hqux5ogwN5_vHZxy8ZaTTIMDjkWotj/preview\",\n        stack: [\"Python\", \"Others\"],\n    },\n];\n\nexport default CertificatesArray;\n","import React from \"react\";\n\n/* Style Utils */\nimport classnames from \"classnames\";\n\n/* Styles */\nimport \"./index.scss\";\n\n/* Global Components */\nimport Heading from \"components/Heading\";\n\n/* Utils */\nimport { widths, getWindowDimension } from \"utils\";\n\n/* Data */\nimport CertificatesArray, { CertificateType } from \"data/certificates\";\n\nfunction CertificatePage() {\n    const [width, setWidth] = React.useState<number>(getWindowDimension());\n\n    const [filterByStack, setFilterByStack] = React.useState<string>(\"all\");\n    const [activeCertificateIndex, setActiveCertificateIndex] =\n        React.useState<number>(0);\n\n    const allStacks = React.useMemo<string[]>((): string[] => {\n        const certificates = new Set<string>();\n\n        CertificatesArray.forEach((certificate: CertificateType): void => {\n            certificate?.stack.forEach((stack: string) =>\n                certificates.add(stack)\n            );\n        });\n\n        return Array.from(certificates);\n    }, []);\n\n    const filteredCertificates = React.useMemo<CertificateType[]>(() => {\n        if (filterByStack === \"all\") {\n            return CertificatesArray;\n        } else {\n            return CertificatesArray.filter(\n                (certificate) =>\n                    certificate.stack &&\n                    certificate.stack.includes(filterByStack)\n            );\n        }\n    }, [filterByStack]);\n\n    const selectedCertificate = React.useMemo<CertificateType>(() => {\n        return filteredCertificates[activeCertificateIndex];\n    }, [activeCertificateIndex, filteredCertificates]);\n\n    const setWindowSize = (): void => {\n        const width: number = getWindowDimension();\n        setWidth(width);\n    };\n\n    React.useEffect(() => {\n        window.addEventListener(\"resize\", setWindowSize);\n        return () => {\n            window.removeEventListener(\"resize\", setWindowSize);\n        };\n    }, []);\n\n    const handleSelect = (stack: string): void => {\n        setFilterByStack(stack);\n        setActiveCertificateIndex(0);\n    };\n\n    return (\n        <section id=\"certificate_page\">\n            <Heading title={\"Certificates\"} subtitle={\"Certificates Earned\"} />\n\n            <div className=\"mt-4 md:mx-6 sm:mx-4 px-2 pt-4 section_content\">\n                <div className=\"container\">\n                    <>\n                        {Array.isArray(allStacks) && (\n                            <>\n                                {width > widths.mdWidth ? (\n                                    <div className=\"mb-2 flex flex-wrap\">\n                                        <button\n                                            className={classnames(\n                                                \"stack_select font-bold\",\n                                                {\n                                                    active:\n                                                        filterByStack === \"all\",\n                                                }\n                                            )}\n                                            onClick={() => handleSelect(\"all\")}\n                                        >\n                                            Show all Certificates :\n                                        </button>\n                                        {allStacks.map((stack: string) => (\n                                            <button\n                                                key={stack}\n                                                className={classnames(\n                                                    \"stack_select\",\n                                                    {\n                                                        active:\n                                                            filterByStack ===\n                                                            stack,\n                                                    }\n                                                )}\n                                                onClick={() =>\n                                                    handleSelect(stack)\n                                                }\n                                            >\n                                                {stack}\n                                            </button>\n                                        ))}\n                                    </div>\n                                ) : (\n                                    <>\n                                        {Array.isArray(allStacks) && (\n                                            <select\n                                                onChange={(e): void =>\n                                                    handleSelect(e.target.value)\n                                                }\n                                            >\n                                                <option value={\"all\"}>\n                                                    Show all Certificates\n                                                </option>\n                                                {allStacks.map(\n                                                    (stack: string) => {\n                                                        return (\n                                                            <option\n                                                                key={stack}\n                                                                value={stack}\n                                                            >\n                                                                {stack}\n                                                            </option>\n                                                        );\n                                                    }\n                                                )}\n                                            </select>\n                                        )}\n                                    </>\n                                )}\n                            </>\n                        )}\n                    </>\n\n                    <div className=\"flex md:flex-row flex-col\">\n                        <div className=\"md:mr-4 flex-0 overflow-y-auto certificate_list\">\n                            {widths.mdWidth > width ? (\n                                <>\n                                    <select\n                                        className=\"w-11/12 text-ellipsis\"\n                                        onChange={(e): void =>\n                                            setActiveCertificateIndex(\n                                                parseInt(e.target.value)\n                                            )\n                                        }\n                                    >\n                                        {Array.isArray(filteredCertificates) &&\n                                            filteredCertificates.map(\n                                                (\n                                                    certificate: CertificateType,\n                                                    index: number\n                                                ) => (\n                                                    <option\n                                                        key={certificate.name}\n                                                        value={index}\n                                                    >\n                                                        {certificate.name}\n                                                    </option>\n                                                )\n                                            )}\n                                    </select>\n                                </>\n                            ) : (\n                                <>\n                                    {Array.isArray(filteredCertificates) &&\n                                        filteredCertificates.map(\n                                            (\n                                                certificate: CertificateType,\n                                                index: number\n                                            ) => {\n                                                const handleOnClick =\n                                                    (): void =>\n                                                        setActiveCertificateIndex(\n                                                            index\n                                                        );\n\n                                                return (\n                                                    <div\n                                                        key={certificate.name}\n                                                        className={classnames(\n                                                            \"my-2 p-1.5 cursor-pointer hover:rounded-md hover:bg-grey-scorpion text-lg font-bold\",\n                                                            {\n                                                                \"active rounded-t-md\":\n                                                                    index ===\n                                                                    activeCertificateIndex,\n                                                            }\n                                                        )}\n                                                        onClick={handleOnClick}\n                                                    >\n                                                        {certificate.name}\n                                                    </div>\n                                                );\n                                            }\n                                        )}\n                                </>\n                            )}\n                        </div>\n\n                        <div className=\"flex-1 certificate-iframe\">\n                            <div className=\"show active\">\n                                <iframe\n                                    title={selectedCertificate.name}\n                                    src={selectedCertificate.url}\n                                    width=\"100%\"\n                                    allowFullScreen={true}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default React.memo(CertificatePage);\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}"],"names":["Heading","subtitle","title","className","React","name","url","stack","CertificatePage","getWindowDimension","width","setWidth","filterByStack","setFilterByStack","activeCertificateIndex","setActiveCertificateIndex","allStacks","certificates","Set","CertificatesArray","certificate","forEach","add","Array","from","filteredCertificates","includes","selectedCertificate","setWindowSize","window","addEventListener","removeEventListener","handleSelect","id","isArray","widths","classnames","active","onClick","map","onChange","e","target","value","parseInt","index","src","allowFullScreen","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","_slicedToArray","arr","arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","err","unsupportedIterableToArray","nonIterableRest"],"sourceRoot":""}